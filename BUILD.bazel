load(
    "//ign_bazel:generate_include_header.bzl",
    "generate_include_header",
)

generated_includes = [
    "dynamics",
    "common",
    "math",
    "integration",
    "lcpsolver",
    "constraint",
    "optimizer",
    "simulation",
]

[
generate_include_header(
    name = "%s_genrule" % subdir,
    out = "dart/%s/%s.hpp" % (subdir, subdir),
    hdrs = glob([
        "dart/%s/*.hpp" % subdir,
    ]),
) for subdir in generated_includes]

# collision has two subdirectories with generated includes unlike the above
# so treat it as a separate case
generate_include_header(
    name = "collision_fcl_genrule",
    out = "dart/collision/fcl/fcl.hpp",
    hdrs = glob([
        "dart/collision/fcl/*.hpp",
    ]),
)

generate_include_header(
    name = "collision_dart_genrule",
    out = "dart/collision/dart/dart.hpp",
    hdrs = glob([
        "dart/collision/dart/*.hpp",
    ]),
)

generate_include_header(
    name = "collision_genrule",
    out = "dart/collision/collision.hpp",
    hdrs = glob([
        "dart/collision/*.hpp",
    ]) + [
        "dart/collision/dart/dart.hpp",
        "dart/collision/fcl/fcl.hpp",
    ],
)

cc_library(
    name = "dart-dynamics",
    srcs = glob([
        "dart/dynamics/*.cpp",
        "dart/dynamics/detail/*.cpp",
        "dart/dynamics/*.hpp",
        "dart/dynamics/detail/*.hpp",
    ]) + [
        "dart/dynamics/dynamics.hpp",
    ],
    hdrs = glob([
        "dart/dynamics/*.hpp",
        "dart/dynamics/detail/*.hpp",
    ]),
    copts = [
        "-Idart",
    ],
    deps = [
        "@eigen3",
        ":dart-common",
        ":dart-math",
        ":dart-external",
        ":dart-optimizer",
    ],
    visibility = ["//visibility:private"],
    alwayslink = 1,
)

cc_library(
    name = "dart-math",
    srcs = glob([
        "dart/math/*.cpp",
        "dart/math/detail/*.cpp",
        "dart/math/*.hpp",
        "dart/math/detail/*.hpp",
    ]) + [
        "dart/math/math.hpp",
    ],
    hdrs = glob([
        "dart/math/*.hpp",
        "dart/math/detail/*.hpp",
    ]),
    copts = [
        "-Idart",
    ],
    deps = [
        "@eigen3",
        ":dart-common",
    ],
    visibility = ["//visibility:private"],
    alwayslink = 1,
)

cc_library(
    name = "dart-common",
    srcs = glob([
        "dart/common/*.cpp",
        "dart/common/detail/*.cpp",
        "dart/common/*.hpp",
        "dart/common/detail/*.hpp",
        "dart/config.hpp",
    ]) + [
        "dart/common/common.hpp",
    ],
    hdrs = glob([
        "dart/common/*.hpp",
        "dart/common/detail/*.hpp",
        "dart/config.hpp",
    ]),
    copts = [
        "-Idart",
    ],
    deps = [
        "@eigen3",
    ],
    includes = ["."],
    linkopts = [
      "-lboost_system",
      "-lboost_regex",
      "-lboost_filesystem",
      "-ltinyxml2",
      "-lassimp",
      "-ldl",
    ],
    visibility = ["//visibility:private"],
    alwayslink = 1,
)

cc_library(
    name = "dart-gui",
    srcs = glob([
        "dart/gui/*.cpp",
        "dart/gui/glut/*.cpp",
        "dart/gui/osg/*.cpp",
        "dart/gui/osg/render/*.cpp",
        "dart/gui/*.hpp",
        "dart/gui/glut/*.hpp",
        "dart/gui/osg/*.hpp",
        "dart/gui/osg/render/*.hpp",
    ]),
    hdrs = glob([
        "dart/gui/*.hpp",
        "dart/gui/glut/*.hpp",
        "dart/gui/osg/*.hpp",
        "dart/gui/osg/render/*.hpp",
    ]),
    copts = [
        "-Idart",
    ],
    deps = [
        ":dart-common",
        ":dart-constraint",
        ":dart-dynamics",
        ":dart-external",
        ":dart-math",
        ":dart-simulation",
        ":dart-utils",
        "@eigen3",
    ],
    linkopts = [
        "-losg",
        "-losgDB",
        "-losgGA",
        "-losgManipulator",
        "-losgShadow",
        "-losgViewer",
        "-lglut",
        "-lGL",
        "-lGLU",
    ],
    visibility = ["//visibility:private"],
    alwayslink = 1,
)


cc_library(
    name = "dart-collision-core",
    srcs = glob([
        "dart/collision/*.cpp",
        "dart/collision/detail/*.cpp",
        "dart/collision/*.hpp",
        "dart/collision/detail/*.hpp",
    ]) + [
        "dart/collision/collision.hpp",
        "dart/collision/fcl/fcl.hpp",
        "dart/collision/dart/dart.hpp",
    ],
    hdrs = glob([
        "dart/collision/*.hpp",
        "dart/collision/detail/*.hpp",
    ]),
    copts = [
        "-Idart",
    ],
    deps = [
        "@eigen3",
        ":dart-dynamics",
        ":dart-math",
    ],
    visibility = ["//visibility:private"],
    alwayslink = 1,
)

cc_library(
    name = "dart-collision-ode",
    srcs = glob([
        "dart/collision/ode/*.cpp",
        "dart/collision/ode/detail/*.cpp",
        "dart/collision/ode/*.hpp",
        "dart/collision/ode/detail/*.hpp",
    ]),
    hdrs = glob([
        "dart/collision/ode/*.hpp",
        "dart/collision/ode/detail/*.hpp",
    ]),
    copts = [
        "-Idart",
    ],
    deps = [
        "@eigen3",
        ":dart-dynamics",
        ":dart-math",
        ":dart-collision-core",
    ],
    visibility = ["//visibility:private"],
    alwayslink = 1,
    linkopts = [
        "-lode",
    ],
)

cc_library(
    name = "dart-collision-fcl",
    srcs = glob([
        "dart/collision/fcl/*.cpp",
        "dart/collision/fcl/*.hpp",
    ]),
    hdrs = glob([
        "dart/collision/fcl/*.hpp",
    ]),
    copts = [
        "-Idart",
    ],
    deps = [
        "@eigen3",
        ":dart-dynamics",
        ":dart-math",
        ":dart-collision-core",
    ],
    visibility = ["//visibility:private"],
    linkopts = ["-lfcl"],
    alwayslink = 1,
)

cc_library(
    name = "dart-collision-dart",
    srcs = glob([
        "dart/collision/dart/*.cpp",
        "dart/collision/dart/*.hpp",
    ]),
    hdrs = glob([
        "dart/collision/dart/*.hpp",
    ]),
    copts = [
        "-Idart",
    ],
    deps = [
        "@eigen3",
        ":dart-dynamics",
        ":dart-math",
        ":dart-collision-core",
    ],
    visibility = ["//visibility:private"],
    alwayslink = 1,
)

cc_library(
    name = "dart-collision",
    deps = [
        ":dart-collision-core",
        ":dart-collision-dart",
        ":dart-collision-fcl",
        ":dart-collision-ode",
    ],
    visibility = ["//visibility:private"],
    alwayslink = 1,
)

cc_library(
    name = "dart-external",
    srcs = glob([
        "dart/external/imgui/*.cpp",
        "dart/external/lodepng/*.cpp",
        "dart/external/odelcpsolver/*.cpp",
        "dart/external/imgui/*.h",
        "dart/external/ikfast/*.h",
        "dart/external/lodepng/*.h",
        "dart/external/odelcpsolver/*.h",
    ]),
    copts = [
        "-Idart",
    ],
    hdrs = glob([
        "dart/external/imgui/*.h",
        "dart/external/ikfast/*.h",
        "dart/external/lodepng/*.h",
        "dart/external/odelcpsolver/*.h",
    ]),
    visibility = ["//visibility:private"],
    alwayslink = 1,
)

cc_library(
    name = "dart-constraint",
    srcs = glob([
        "dart/constraint/*.cpp",
        "dart/constraint/*.hpp",
        "dart/constraint/detail/*.hpp",
    ]) + [
        "dart/constraint/constraint.hpp",
    ],
    hdrs = glob([
        "dart/constraint/*.hpp",
        "dart/constraint/detail/*.hpp",
    ]),
    copts = [
        "-Idart",
    ],
    deps = [
        "@eigen3",
        ":dart-dynamics",
        ":dart-external",
        ":dart-collision",
        ":dart-common",
        ":dart-lcpsolver",
        ":dart-math",
    ],
    visibility = ["//visibility:private"],
    alwayslink = 1,
)

cc_library(
    name = "dart-simulation",
    srcs = glob([
        "dart/simulation/*.cpp",
        "dart/simulation/*.hpp",
        "dart/simulation/detail/*.hpp",
    ]) + [
        "dart/simulation/simulation.hpp"
    ],
    hdrs = glob([
        "dart/simulation/*.hpp",
        "dart/simulation/detail/*.hpp",
    ]),
    copts = [
        "-Idart",
    ],
    deps = [
        "@eigen3",
        ":dart-dynamics",
        ":dart-collision",
        ":dart-constraint",
        ":dart-common",
        ":dart-integration",
    ],
    visibility = ["//visibility:private"],
    alwayslink = 1,
)

cc_library(
    name = "dart-integration",
    srcs = glob([
        "dart/integration/*.cpp",
        "dart/integration/*.hpp",
    ]) + [
        "dart/integration/integration.hpp",
    ],
    copts = [
        "-Idart",
    ],
    hdrs = glob([
        "dart/integration/*.hpp",
    ]),
    deps = [
        "@eigen3",
    ],
    visibility = ["//visibility:private"],
    alwayslink = 1,
)

cc_library(
    name = "dart-utils",
    srcs = glob([
        "dart/utils/*.cpp",
        "dart/sdf/*.cpp",
        "dart/urdf/*.cpp",
        "dart/utils/*.hpp",
        "dart/utils/sdf/*.hpp",
        "dart/utils/urdf/*.hpp",
    ]),
    hdrs = glob([
        "dart/utils/*.hpp",
        "dart/utils/sdf/*.hpp",
        "dart/utils/urdf/*.hpp",
    ]),
    deps = [
        "@eigen3",
        ":dart-dynamics",
        ":dart-math",
        ":dart-collision",
        ":dart-common",
        ":dart-simulation",
    ],
    copts = [
        "-Idart",
    ],
    visibility = ["//visibility:private"],
    alwayslink = 1,
)

cc_library(
    name = "dart-optimizer",
    srcs = glob([
        "dart/optimizer/*.cpp",
        "dart/optimizer/nlopt/*.cpp",
        "dart/optimizer/*.hpp",
        "dart/optimizer/nlopt/*.hpp",
    ]) + [
        "dart/optimizer/optimizer.hpp",
    ],
    hdrs = glob([
        "dart/optimizer/*.hpp",
        "dart/optimizer/nlopt/*.hpp",
    ]),
    deps = [
        "@eigen3",
        ":dart-math",
        ":dart-common",
    ],
    copts = [
        "-Idart",
    ],
    visibility = ["//visibility:private"],
    linkopts = ["-lnlopt"],
    alwayslink = 1,
)

cc_library(
    name = "dart-lcpsolver",
    srcs = glob([
        "dart/lcpsolver/*.cpp",
        "dart/lcpsolver/*.hpp",
    ]) + [
        "dart/lcpsolver/lcpsolver.hpp",
    ],
    hdrs = glob([
        "dart/lcpsolver/*.hpp",
    ]),
    deps = [
        "@eigen3",
        ":dart-math",
        ":dart-common",
        ":dart-external",
    ],
    copts = [
        "-Idart",
    ],
    visibility = ["//visibility:private"],
    alwayslink = 1,
)

cc_library(
    name = "dart",
    srcs = [
        "dart/dart.cpp",
        "dart/dart.hpp",
    ],
    hdrs = [
        "dart/dart.hpp",
    ],
    deps = [
        ":dart-math",
        ":dart-common",
        ":dart-optimizer",
        ":dart-utils",
        ":dart-integration",
        ":dart-dynamics",
        ":dart-simulation",
        ":dart-lcpsolver",
        ":dart-constraint",
        ":dart-collision",
        ":dart-external",
        ":dart-gui",
    ],
    includes = ["dart"],
    visibility = ["//visibility:public"],
    alwayslink = 1,
)

cc_library

cc_binary(
    name = "hello_world",
    srcs = [
        "examples/hello_world/main.cpp",
    ],
    includes = ["dart"],
    deps = [
        ":dart",
        ":dart-math",
        ":dart-common",
        ":dart-optimizer",
        ":dart-utils",
        ":dart-integration",
        ":dart-dynamics",
        ":dart-simulation",
        ":dart-lcpsolver",
        ":dart-constraint",
        ":dart-collision",
        ":dart-external",
        ":dart-gui",
    ],
)

